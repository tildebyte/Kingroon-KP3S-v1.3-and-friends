[gcode_macro GET_PROBE_LIMITS]
description: Calculates the probe min/max/current coordinates
gcode:
  # Find probe config in configfile
  {% if printer.configfile.config["bltouch"] %}
    # bltouch section found
    {% set probe = printer.configfile.config["bltouch"] %}
    {% set has_probe = True %}
  {% elif printer.configfile.config["probe"] %}
    # probe section found
    {% set probe = printer.configfile.config["probe"] %}
    {% set has_probe = True %}
  {% else %}
    # No probe or bltouch sections found
    RESPOND MSG="Failed to detect probe in configfile"
  {% endif %}

  # only do the rest if we have a probe to work with
  {% if has_probe %}

    {% set stepperx = printer.configfile.config["stepper_x"] %}
    {% set steppery = printer.configfile.config["stepper_y"] %}
    {% set xprobemin = stepperx["position_min"]|float + probe["x_offset"]|float %}
    {% set xprobemax = stepperx["position_max"]|float + probe["x_offset"]|float %}
    {% set yprobemin = steppery["position_min"]|float + probe["y_offset"]|float %}
    {% set yprobemax = steppery["position_max"]|float + probe["y_offset"]|float %}

    RESPOND MSG="Minimum PROBE position X={xprobemin} Y={yprobemin}"
    RESPOND MSG="Maximum PROBE position X={xprobemax} Y={yprobemax}"

    # check if printer homed
    {% if "xyz" in printer.toolhead.homed_axes %}
      {% set curprobex = printer.toolhead.position.x|float + probe["x_offset"]|float %}
      {% set curprobey = printer.toolhead.position.y|float + probe["y_offset"]|float %}
      RESPOND MSG="Current PROBE position X={curprobex} Y={curprobey}"
    {% endif %}
  {% endif %}
